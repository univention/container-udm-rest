---
# Default values for udm-rest-api.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## Global values
affinity: {}
environment: {}
fullnameOverride: ""
mountSecrets: true
mountUcr: true
nameOverride: ""
nodeSelector: {}
podAnnotations: {}
podSecurityContext: {}
replicaCount: 1
securityContext: {}
tolerations: []

# TODO: does this belong here?
global:
  configMapUcrDefaults: "stack-data-ums-ucr"
  configMapUcr: "stack-data-swp-ucr"
  configMapUcrForced: "stack-data-dev-ucr"

  imageRegistry: "gitregistry.knut.univention.de"

# -- Application configuration of the UDM REST API
udmRestApi:
  # -- Path to file with the LDAP secret.
  # (TODO: This may be unnecessary here.)
  ldapSecretFile: "/var/secrets/ldap_secret"
  # -- Path to file with the LDAP machine secret.
  machineSecretFile: "/var/secrets/machine_secret"
  # -- Path to file with the CA certificate.
  # (Not needed when `tlsReqCert` set to `"never"`.)
  caCertFile: "/var/secrets/ca_cert"


# -- Kubernetes ingress
ingress:
  # -- Set this to `true` in order to enable the installation of Ingress related objects.
  enabled: true
  ingressClassName: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/configuration-snippet: |
      rewrite ^/univention(/udm/.*)$ $1 break;
    nginx.org/location-snippets: |
      rewrite ^/univention(/udm/.*)$ $1 break;
    nginx.org/mergeable-ingress-type: "minion"
  # -- The hostname. This parameter has to be supplied. Example `udm.example.com`.
  host: null
  paths:
    - pathType: "Prefix"
      path: "/univention/udm/"
  tls:
    enabled: true
    secretName: ""


## Istio support
istio:
  # -- Set this to `true` in order to enable the installation of Istio related objects.
  enabled: false
  # -- The hostname. This parameter has to be supplied. Example `udm.example`.
  # host: "sso.example.com"
  virtualService:
    enabled: true
    annotations: {}
    pathOverrides: []
    paths:
      - match: "prefix"
        path: "/univention/udm/"
        rewrite: "/udm/"
  gateway:
    enabled: false
    annotations:
    selectorIstio: "ingressgateway"
    externalGatewayName: "swp-istio-gateway"
    tls:
      enabled: true
      httpsRedirect: true
      secretName: ""


## Docker image
image:
  # -- Define registry for this image. Uses `global.imageRegistry` as default if not defined.
  registry: ""
  repository: "univention/customers/dataport/upx/container-udm-rest/udm-rest-api"
  tag: "0.1.0"
  imagePullPolicy: "Always"

  ## Define image sha256 as an alternative to `tag`
  # sha256:


## Container deployment probes
probes:
  liveness:
    enabled: true
    initialDelaySeconds: 120
    timeoutSeconds: 3
    periodSeconds: 30
    failureThreshold: 3
    successThreshold: 1

  readiness:
    enabled: true
    initialDelaySeconds: 30
    timeoutSeconds: 3
    periodSeconds: 15
    failureThreshold: 30
    successThreshold: 1


## Deployment resources
resources:
  requests:
    memory: "512Mi"
    cpu: "250m"
  limits:
    memory: "4Gi"
    cpu: "4"

## Kubernetes Service
service:
  enabled: true
  type: "ClusterIP"
  ports:
    http:
      containerPort: 9979
      port: 80
      protocol: "TCP"

  sessionAffinity:
    enabled: false
    timeoutSeconds: 10800

...
