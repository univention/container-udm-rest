# SPDX-License-Identifier: AGPL-3.0-only
# SPDX-FileCopyrightText: 2024 Univention GmbH

---
apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ include "common.names.fullname" . }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels:
    {{- include "common.labels.standard" . | nindent 4 }}
    {{- if .Values.additionalLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.additionalLabels "context" . ) | nindent 4 }}
    {{- end }}
  {{- if .Values.additionalAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.additionalAnnotations "context" . ) | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy: {{- include "common.tplvalues.render" (dict "value" .Values.updateStrategy "context" .) | nindent 4 }}
  selector:
    matchLabels:
      {{- include "common.labels.matchLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/configmap: {{ include (print .Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- if .Values.podAnnotations }}
        {{- include "common.tplvalues.render" (dict "value" .Values.podAnnotations "context" .) | nindent 8 }}
        {{- end }}
      labels:
        {{- include "common.labels.standard" . | nindent 8 }}
    spec:
      {{- if or .Values.imagePullSecrets .Values.global.imagePullSecrets  }}
      imagePullSecrets:
        {{- range .Values.global.imagePullSecrets }}
        - name: "{{ . }}"
        {{- end }}
        {{- range .Values.imagePullSecrets }}
        - name: "{{ . }}"
        {{- end }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.affinity "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.tolerations "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" .Values.topologySpreadConstraints "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.nodeSelector "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ include "common.names.fullname" . }}
      {{- end }}
      {{- if .Values.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- end }}
      initContainers:
        - name: "univention-compatibility"
          {{- if .Values.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          image: "{{ coalesce .Values.udmRestApi.image.registry .Values.global.imageRegistry }}/{{ .Values.udmRestApi.image.repository }}:{{ .Values.udmRestApi.image.tag }}"
          imagePullPolicy: {{ coalesce .Values.udmRestApi.image.imagePullPolicy .Values.global.imagePullPolicy | quote }}
          command:
            - sh
            - -c
            - 'cp -a /etc/univention/* /target/etc/univention/; cp -a /usr/lib/python3/* /target/usr/lib/python3/;'
          volumeMounts:
            - name: etc-univention-volume
              mountPath: /target/etc/univention
            - name: usr-lib-python3-volume
              mountPath: /target/usr/lib/python3
          resources: {{- include "common.tplvalues.render" (dict "value" .Values.initResources "context" .) | nindent 12 }}
        - name: "ucr-commit"
          {{- if .Values.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          image: "{{ coalesce .Values.udmRestApi.image.registry .Values.global.imageRegistry }}/{{ .Values.udmRestApi.image.repository }}:{{ .Values.udmRestApi.image.tag }}"
          imagePullPolicy: {{ coalesce .Values.udmRestApi.image.imagePullPolicy .Values.global.imagePullPolicy | quote }}
          command:
            - sh
            - -c
            - 'ucr commit /etc/univention/directory/reports/config.ini'
          volumeMounts:
            - name: etc-univention-volume
              mountPath: /etc/univention
            - name: var-cache-univention-config-volume
              mountPath: /var/cache/univention-config
          resources: {{- include "common.tplvalues.render" (dict "value" .Values.initResources "context" .) | nindent 12 }}
      containers:
        - name: "udm-rest-api"
          {{- if .Values.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          command:
            - sh
            - -c
            - |
              python3 \
              -m "univention.admin.rest.server" \
              --debug "{{ .Values.udmRestApi.debug }}" \
              --port "{{ .Values.service.ports.http.containerPort }}" \
              --interface "0.0.0.0" \
              --processes "1"
          image: "{{ coalesce .Values.udmRestApi.image.registry .Values.global.imageRegistry }}/{{ .Values.udmRestApi.image.repository }}:{{ .Values.udmRestApi.image.tag }}"
          imagePullPolicy: {{ coalesce .Values.udmRestApi.image.imagePullPolicy .Values.global.imagePullPolicy | quote }}
          envFrom:
            - configMapRef:
                name: {{ include "common.names.fullname" . }}
          {{- with .Values.extraEnvVars }}
            {{- . | toYaml | nindent 12 }}
          {{- end }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.livenessProbe "context" .) | nindent 12 }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.readinessProbe "context" .) | nindent 12 }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" .Values.startupProbe "context" .) | nindent 12 }}
          ports:
            {{- range $key, $value := .Values.service.ports }}
            - name: {{ $key }}
              containerPort: {{ $value.containerPort }}
              protocol: {{ $value.protocol }}
            {{- end }}
          {{- if .Values.resources }}
          resources: {{- include "common.tplvalues.render" (dict "value" .Values.resources "context" .) | nindent 12 }}
          {{- end }}
          {{- if .Values.lifecycleHooks }}
          lifecycle: {{- include "common.tplvalues.render" (dict "value" .Values.lifecycleHooks "context" .) | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: usr-lib-python3-volume
              mountPath: /usr/lib/python3
            - name: var-log-univention-volume
              mountPath: /var/log/univention
            - name: tmp-volume
              mountPath: /tmp
            - name: var-run-volume
              mountPath: /var/run
            - name: etc-ldap-volume
              mountPath: /etc/ldap
            - name: etc-univention-volume
              mountPath: /etc/univention
            - name: credentials-volume
              mountPath: {{ .Values.udmRestApi.ldapSecretFile }}
              subPath: ldap.secret
            - name: credentials-volume
              mountPath: {{ .Values.udmRestApi.machineSecretFile }}
              subPath: machine.secret
            {{- if .Values.udmRestApi.tls.enabled }}
            - name: {{ printf "%s-tls-volume" (include "common.names.fullname" .) }}
              mountPath: /certificates
            {{- end }}
            - name: "config-map-ucr-defaults"
              mountPath: "/etc/univention/base-defaults.conf"
              subPath: "base.conf"
            {{- if (include "udm-rest-api.configMapUcr" .) }}
            - name: "config-map-ucr"
              mountPath: "/etc/univention/base.conf"
              subPath: "base.conf"
            {{- end }}
            {{- if (include "udm-rest-api.configMapUcrForced" .) }}
            - name: "config-map-ucr-forced"
              mountPath: "/etc/univention/base-forced.conf"
              subPath: "base.conf"
            {{- end }}
            {{- if .Values.extraVolumeMounts }}
            {{- include "common.tplvalues.render" (dict "value" .Values.extraVolumeMounts "context" .) | nindent 12 }}
            {{- end }}
      volumes:
        - name: "usr-lib-python3-volume"
          emptyDir: {}
        - name: "etc-ldap-volume"
          configMap:
            name: "{{ printf "%s-ldap-conf" (include "common.names.fullname" .) }}"
        - name: "var-cache-univention-config-volume"
          emptyDir: {}
        - name: "tmp-volume"
          emptyDir: {}
        - name: "var-run-volume"
          emptyDir: {}
        - name: "var-log-univention-volume"
          emptyDir: {}
        - name: "etc-univention-volume"
          emptyDir: {}
        - name: credentials-volume
          secret:
            defaultMode: 420
            {{- include ("udm-rest-api.secretRef") . | nindent 12 }}
        {{- if .Values.udmRestApi.tls.enabled }}
        - name: {{ printf "%s-tls-volume" (include "common.names.fullname" .) }}
          secret:
            defaultMode: 0400
            secretName: {{ .Values.udmRestApi.tls.certificateSecret | default (printf "%s-tls" (include "common.names.fullname" . )) | quote }}
        {{- end }}
        - name: "config-map-ucr-defaults"
          configMap:
            name: {{ include "udm-rest-api.configMapUcrDefaults" . | quote }}
        {{- if (include "udm-rest-api.configMapUcr" .) }}
        - name: "config-map-ucr"
          configMap:
            name: {{ include "udm-rest-api.configMapUcr" . | quote }}
        {{- end }}
        {{- if (include "udm-rest-api.configMapUcrForced" .) }}
        - name: "config-map-ucr-forced"
          configMap:
            name: {{ include "udm-rest-api.configMapUcrForced" . | quote }}
        {{- end }}
        {{- if .Values.extraVolumes }}
        {{- include "common.tplvalues.render" (dict "value" .Values.extraVolumes  "context" .) | nindent 8 }}
        {{- end }}
