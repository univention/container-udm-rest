---

variables:
  SOUVAP_HELM_PROJECT_ID: 155
  SOUVAP_REGISTRY_PATH: souvap/tooling/images/univention

include:
  - project: "univention/customers/dataport/upx/common-ci"
    ref: "v0.5.4"
    file:
      # TODO: Sphinx docs inherits a stage definition from upstream,
      # has to be included before our default stages to avoid trouble.
      - "jobs/sphinx-docs.yaml"
      - "defaults/souvap-workflow.yaml"
      - "defaults/stages.yaml"
      - "templates/kaniko.yaml"
      - "templates/semantic-release-env.yaml"
      - "templates/souvap.yaml"
      - "jobs/lint-commit-messages.yaml"
      - "jobs/lint-pre-commit.yaml"
      - "jobs/package-and-publish-helm-charts.yaml"
  - project: "univention/dist/docker-services"
    ref: "master"
    file:
      - "dind.yml"

lint-pre-commit:
  before_script:
    # Compose lint would fail without the referenced env files
    - "cp .env.udm-rest-api.example .env.udm-rest-api"

pre-semantic-release:
  extends: ".pre-semantic-release"

build-udm-rest-image:
  stage: "build"
  extends: ".kaniko"
  needs:
    - job: "pre-semantic-release"
      artifacts: true
  variables:
    KANIKO_BUILD_CONTEXT: "docker/udm-rest-api"
    CI_REGISTRY_IMAGE: "${CI_REGISTRY_IMAGE}/udm-rest-api"
    VERSION: "${RELEASE_VERSION}"

build-udm-rest-test-image:
  stage: "build"
  extends: ".kaniko"
  needs:
    - job: "pre-semantic-release"
      artifacts: true
  variables:
    KANIKO_BUILD_CONTEXT: "docker/udm-rest-api"
    CI_REGISTRY_IMAGE: "${CI_REGISTRY_IMAGE}/udm-rest-api-test"
    KANIKO_ARGS: "--target=test"
    VERSION: "${RELEASE_VERSION}"

build-testrunner-image:
  stage: "build"
  extends: ".kaniko"
  needs:
    - job: "pre-semantic-release"
      artifacts: true
  variables:
    KANIKO_BUILD_CONTEXT: "docker/testrunner"
    CI_REGISTRY_IMAGE: "${CI_REGISTRY_IMAGE}/testrunner"
    VERSION: "${RELEASE_VERSION}"

test-udm-rest:
  stage: "test"
  needs:
    - job: "build-udm-rest-image"
      artifacts: true
    - job: "build-testrunner-image"
      artifacts: false
  extends: .dind
  image: "${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/docker:24.0.7"
  before_script:
    # Allow that the Docker API version is negotiated between client and server
    - unset DOCKER_API_VERSION
    - export IMAGE_TAG=$BUILD_VERSION
    - echo -e "\e[0Ksection_start:`date +%s`:docker_debug[collapsed=true]\r\e[0KDocker version details"
    - echo $IMAGE_TAG
    - docker version
    - echo -e "\e[0Ksection_end:`date +%s`:docker_debug\r\e[0K"
    - cp .env.udm-rest-api.example .env.udm-rest-api
    - mkdir secret
    - echo "univention" > secret/machine.secret
    - echo "univention" > secret/ldap.secret
    - echo -e "\e[0Ksection_start:`date +%s`:docker_compose_config[collapsed=true]\r\e[0KDocker Compose configuration"
    - docker compose config udm-rest-api ldap-server test
    - echo -e "\e[0Ksection_end:`date +%s`:docker_compose_config\r\e[0K"
    - docker compose up --no-build --quiet-pull --wait --wait-timeout 60 udm-rest-api ldap-server
  script:
    - docker compose run --quiet-pull --rm test pytest tests/integration
  after_script:
    - docker compose down --volumes

build-udm-rest-api-python-client:
  stage: build
  extends: .kaniko
  needs:
    - job: "pre-semantic-release"
      artifacts: true
  variables:
    KANIKO_BUILD_CONTEXT: "docker/udm-rest-api-python-client"
    CI_REGISTRY_IMAGE: "$CI_REGISTRY_IMAGE/udm-rest-api-python-client"
    VERSION: "${RELEASE_VERSION}"

push-image-souvap:
  needs:
    - job: "build-udm-rest-image"
  extends: ".push-image-souvap"
  variables:
    SOUVAP_IMAGE_NAME: "udm-rest-api"

package-helm-charts:
  needs:
    - job: "pre-semantic-release"
      artifacts: true

publish-helm-charts-souvap:
  extends: ".publish-helm-charts-souvap"

...
