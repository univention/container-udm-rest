---

variables:
  SOUVAP_HELM_PROJECT_ID: 155
  SOUVAP_REGISTRY_PATH: souvap/tooling/images/univention

include:
  - project: "univention/customers/dataport/upx/common-ci"
    ref: "v0.5.4"
    file:
      # TODO: Sphinx docs inherits a stage definition from upstream,
      # has to be included before our default stages to avoid trouble.
      - "jobs/sphinx-docs.yaml"
      - "defaults/souvap-workflow.yaml"
      - "defaults/stages.yaml"
      - "templates/kaniko.yaml"
      - "templates/semantic-release-env.yaml"
      - "templates/souvap.yaml"
      - "jobs/lint-commit-messages.yaml"
      - "jobs/lint-pre-commit.yaml"
      - "jobs/package-and-publish-helm-charts.yaml"

lint-pre-commit:
  before_script:
    # Compose lint would fail without the referenced env files
    - "cp .env.udm-rest-api.example .env.udm-rest-api"

pre-semantic-release:
  extends: ".pre-semantic-release"

build-udm-rest-image:
  stage: "build"
  extends: ".kaniko"
  needs:
    - job: "pre-semantic-release"
      artifacts: true
  variables:
    KANIKO_BUILD_CONTEXT: "docker/udm-rest-api"
    CI_REGISTRY_IMAGE: "${CI_REGISTRY_IMAGE}/udm-rest-api"
    VERSION: "${RELEASE_VERSION}"

build-udm-rest-test-image:
  stage: "build"
  extends: ".kaniko"
  needs: []
  variables:
    KANIKO_BUILD_CONTEXT: "docker/udm-rest-api"
    CI_REGISTRY_IMAGE: "${CI_REGISTRY_IMAGE}/udm-rest-api-test"
    KANIKO_ARGS: "--target=test"
    VERSION: "${RELEASE_VERSION}"

build-testrunner-image:
  stage: "build"
  extends: ".kaniko"
  needs: []
  variables:
    KANIKO_BUILD_CONTEXT: "docker/testrunner"
    CI_REGISTRY_IMAGE: "${CI_REGISTRY_IMAGE}/testrunner"
    VERSION: "${RELEASE_VERSION}"

test-udm-rest-v1:
  stage: "test"
  needs:
    - job: "build-udm-rest-test-image"
      artifacts: false
    - job: "build-testrunner-image"
  image: "${CI_REGISTRY_IMAGE}/testrunner:${BUILD_VERSION}"
  services:
    - name: "${CI_REGISTRY}/univention/customers/dataport/upx/container-ldap/ldap-server:latest"
      variables:
        DOMAIN_NAME: "univention-organization.intranet"
        LDAP_BASE_DN: "dc=univention-organization,dc=intranet"
        LDAP_CN_ADMIN_PW: "univention"
        TLS_MODE: "off"
    - name: "${CI_REGISTRY_IMAGE}/udm-rest-api-test:${BUILD_VERSION}"
      variables:
        MACHINE_SECRET: "univention"
  before_script:
    # TODO: maybe we can put a more sophisticated healthcheck here...
    - 'echo "Waiting for container-ldap to start ... "'
    - "timeout 60 bash -c 'until printf \"\" > /dev/tcp/localhost/389; do sleep 1; done'"
    - 'echo "Waiting container-udm-rest to start ... "'
    - "timeout 60 bash -c 'until printf \"\" > /dev/tcp/localhost/9979; do sleep 1; done'"
  script:
    - 'pytest tests/integration --udm-rest-url "http://localhost:9979/udm/"'

test-udm-rest:
  stage: test
  needs:
    - job: "build-udm-rest-test-image"
    - job: "build-testrunner-image"
      artifacts: false
  variables:
    DOCKER_HOST: tcp://localhost:2377/
    CI_DEBUG_SERVICES: "true"
  services:
    - name: "${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/docker:24.0.7-dind"
      entrypoint: []
      command:
        - dockerd
        - --host
        - tcp://0.0.0.0:2377
        # - --bridge
        # - mydocker
        # --debug
      variables:
        DOCKER_DRIVER: overlay2
  image: "gitregistry.knut.univention.de/univention/customers/dataport/upx/dev-env/debian-kind-base:branch-jbornhold-test-new-docker-version"
  before_script:
    # Using Gitlab's job variables does not work in this case
    - export DOCKER_API_VERSION="1.43"
    - 'echo "Waiting for dockerd to start ... "'
    - "timeout 60 bash -c 'until printf \"\" > /dev/tcp/localhost/2377; do sleep 1; done'"
  script:
    # TODO: Fix
    # - export IMAGE_TAG=${BUILD_VERSION}
    - cp .env.udm-rest-api.example .env.udm-rest-api
    - mkdir secret
    - echo -n univention > secret/machine.secret
    - echo -n univention > secret/ldap.secret
    - docker compose config udm-rest-api ldap-server test
    - docker compose up --wait --wait-timeout 60 --quiet-pull --pull always udm-rest-api
    - docker compose logs --follow &
    - docker network ls
    # - docker ps
    - docker inspect dev-local-udm-rest-api-1
    # - docker compose run --rm --quiet-pull test curl -i http://172.18.0.2:9979
    - docker compose run --rm --quiet-pull --name testrunner test curl -i http://udm-rest-api:9979 &
    - sleep 30
    - docker ps
    - docker inspect testrunner
    # - docker compose run --rm --quiet-pull test pytest tests/integration --udm-rest-url "http://udm-rest-api:9979/udm/"
    - docker compose down

build-udm-rest-api-python-client:
  stage: build
  extends: .kaniko
  needs:
    - job: "pre-semantic-release"
      artifacts: true
  variables:
    KANIKO_BUILD_CONTEXT: "docker/udm-rest-api-python-client"
    CI_REGISTRY_IMAGE: "$CI_REGISTRY_IMAGE/udm-rest-api-python-client"
    VERSION: "${RELEASE_VERSION}"

push-image-souvap:
  needs:
    - job: "build-udm-rest-image"
  extends: ".push-image-souvap"
  variables:
    SOUVAP_IMAGE_NAME: "udm-rest-api"

package-helm-charts:
  needs:
    - job: "pre-semantic-release"
      artifacts: true

publish-helm-charts-souvap:
  extends: ".publish-helm-charts-souvap"

...
