# SPDX-License-Identifier: AGPL-3.0-only
# SPDX-FileCopyrightText: 2023 Univention GmbH

---
include:
  - project: "univention/customers/dataport/upx/common-ci"
    ref: "v1.16.2"
    file:
      # TODO: Sphinx docs inherits a stage definition from upstream,
      # has to be included before our default stages to avoid trouble.
      - "jobs/sphinx-docs.yaml"
      - "defaults/stages.yaml"
      - "defaults/souvap-workflow.yaml"
      - "jobs/lint-pre-commit.yaml"
      - "jobs/lint-commit-messages.yaml"
      - "jobs/semantic-release-env.yaml"
      - "jobs/container-build-souvap.yaml"
      - "jobs/package-and-publish-helm-charts-souvap.yaml"
      - "jobs/check-debian-updates.yaml"

  - project: "univention/dist/docker-services"
    ref: "master"
    file:
      - "dind.yml"

lint-pre-commit:
  before_script:
    # Compose lint would fail without the referenced env files
    - "cp .env.udm-rest-api.example .env.udm-rest-api"

.build-matrix: &build-matrix
  - IMAGE_NAME:
      - "udm-rest-api"
      - "testrunner"
  - IMAGE_NAME: "udm-rest-api-python-client"
    KANIKO_ARGS: "--target final"
    DOCKERFILE_PATH: "docker/udm-rest-api-python-client/Dockerfile"
  - IMAGE_NAME: "udm-cli"
    KANIKO_ARGS: "--target cli"
    DOCKERFILE_PATH: "docker/udm-rest-api-python-client/Dockerfile"

.publish-matrix: &publish-matrix
  - IMAGE_NAME:
      - "udm-rest-api"
      - "udm-rest-api-python-client"

container-build:
  parallel:
    matrix: *build-matrix

container-generate-sbom:
  parallel:
    matrix: *build-matrix

container-sign:
  parallel:
    matrix: *build-matrix

container-security-scan:
  parallel:
    matrix: *build-matrix

test-udm-rest:
  stage: "test"
  extends: .dind
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: "never"
    - when: "on_success"
  image: "${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/docker:24.0.7"
  before_script:
    # Allow that the Docker API version is negotiated between client and server
    - unset DOCKER_API_VERSION
    - export IMAGE_TAG=${RELEASE_VERSION}
    - echo -e "\e[0Ksection_start:`date +%s`:docker_debug[collapsed=true]\r\e[0KDocker version details"
    - echo $IMAGE_TAG
    - docker version
    - echo -e "\e[0Ksection_end:`date +%s`:docker_debug\r\e[0K"
    - cp .env.udm-rest-api.example .env.udm-rest-api
    - mkdir secret
    - echo "univention" > secret/machine.secret
    - echo "univention" > secret/ldap.secret
    - echo -e "\e[0Ksection_start:`date +%s`:docker_compose_config[collapsed=true]\r\e[0KDocker Compose configuration"
    - docker compose config udm-rest-api ldap-server test
    - echo -e "\e[0Ksection_end:`date +%s`:docker_compose_config\r\e[0K"
    - docker compose up --no-build --quiet-pull --wait --wait-timeout 60 udm-rest-api ldap-server
  script:
    - docker compose run --quiet-pull --rm test pytest tests/integration
  after_script:
    - docker compose down --volumes

push-image-souvap:
  parallel:
    matrix: *publish-matrix

container-sign-souvap:
  parallel:
    matrix: *publish-matrix

check-debian-updates:
  parallel:
    matrix: *publish-matrix
  variables:
    TARGET_IMAGE: "${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:latest"
...
